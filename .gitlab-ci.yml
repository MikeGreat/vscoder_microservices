---
stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: "mongodb://mongo/user_posts"

before_script:
  - echo 'Before script'

build_job:
  stage: build
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  script:
    # login
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # build
    - cd ./src
    - docker build -t ${CI_REGISTRY_IMAGE}/post:${CI_COMMIT_REF_NAME} ./post-py
    - docker build -t ${CI_REGISTRY_IMAGE}/comment:${CI_COMMIT_REF_NAME} ./comment
    - docker build -t ${CI_REGISTRY_IMAGE}/ui:${CI_COMMIT_REF_NAME} ./ui
    # push
    - docker push ${CI_REGISTRY_IMAGE}/post:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY_IMAGE}/comment:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY_IMAGE}/ui:${CI_COMMIT_REF_NAME}
  tags:
    - dind

test_unit_job:
  stage: test
  services:
    - mongo:latest
  script:
    - echo 'Testing 1'

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  image: cytopia/ansible:2.9
  script:
    - pip3 install requests google-auth
    - cd gitlab/ansible
    - ansible-galaxy install -r environments/stage/requirements.yml
    - ansible-inventory -i environments/stage/runner-inventory.gcp.yml --list
    - apk update && apk add openssh-client
    # - eval $(ssh-agent -s)
    # - cat "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ANSIBLE_HOST_KEY_CHECKING=False \
      ANSIBLE_SSH_USER=appuser \
      ANSIBLE_SSH_PRIVATE_KEY_FILE="$SSH_PRIVATE_KEY" \
      ansible-playbook -i environments/stage/runner-inventory.gcp.yml playbooks/deploy-dev.yml -vvvv
  environment:
    name: dev
    url: http://dev.example.com
  tags:
    - docker

branch review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
